[{"path":[]},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to animalAdoptR","title":"Contributing to animalAdoptR","text":"outlines propose change animalAdoptR. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to animalAdoptR","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to animalAdoptR","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to animalAdoptR","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"DSCI-310-2025/animalAdoptR\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to animalAdoptR","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to animalAdoptR","text":"Please note animalAdoptR project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 DSCI 310-2025 Group 01 Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Abner Bal. Author. Kevin Jia. Author. Yuwen Luo. Author, maintainer.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bal , Jia K, Luo Y (2025). animalAdoptR: Helper Functions Animal Shelter Adoption Data Analysis. R package version 0.0.0.9000, https://dsci-310-2025.github.io/animalAdoptR/.","code":"@Manual{,   title = {animalAdoptR: Helper Functions for Animal Shelter Adoption Data Analysis},   author = {Abner Bal and Kevin Jia and Yuwen Luo},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://dsci-310-2025.github.io/animalAdoptR/}, }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"animaladoptr","dir":"","previous_headings":"","what":"Helper Functions for Animal Shelter Adoption Data Analysis","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"animalAdoptR R package provides helper functions preprocessing, visualizing, modeling animal shelter adoption data. built part data science course project encourage code modularity, reproducibility, reusability.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"Load validate CSV datasets informative messages Preprocess group rare categories categorical variables Train evaluate random forest models Generate clean visualizations adoption rates, feature importance, confusion matrices Save plots summary tables directly file","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"install development version animalAdoptR GitHub: load package:","code":"# install.packages(\"devtools\") devtools::install_github(\"DSCI-310-2025/animalAdoptR\") library(animalAdoptR)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example Usage","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"","code":"# Load and inspect data df <- load_data(\"data/processed/longbeach_transformed.csv\")  # Train a model model <- train_rf_model(df, adopted ~ age + sex)  # Evaluate it results <- evaluate_rf_model(model, df)  # Plot confusion matrix plot_confusion_matrix(results$confusion_matrix)  # Plot feature importance plot_feature_importance(model)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"Please note animalAdoptR project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Helper Functions for Animal Shelter Adoption Data Analysis","text":"project licensed MIT License.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/assign_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","title":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","text":"Assign season based month Maps numeric character month values seasons (Winter, Spring, Summer, Fall).","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/assign_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","text":"","code":"assign_season(month)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/assign_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","text":"month character numeric vector months (1-12 \"01\"-\"12\")","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/assign_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","text":"character vector corresponding seasons (Winter, Spring, Summer, Fall, Unknown)","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/assign_season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign season based on month Maps numeric or character month values to seasons (Winter, Spring, Summer, Fall). — assign_season","text":"","code":"assign_season(c(\"01\", \"04\", \"07\", \"10\")) #> [1] \"Winter\" \"Spring\" \"Summer\" \"Fall\"   assign_season(c(1, 3, 8)) #> [1] \"Winter\" \"Spring\" \"Summer\""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/calculate_age_years.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate animal age in years from date of birth — calculate_age_years","title":"Calculate animal age in years from date of birth — calculate_age_years","text":"function converts dates birth ages years, handling single dates vectors dates, proper NA handling.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/calculate_age_years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate animal age in years from date of birth — calculate_age_years","text":"","code":"calculate_age_years(dob, reference_date = Sys.Date())"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/calculate_age_years.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate animal age in years from date of birth — calculate_age_years","text":"dob Date object character vector birth dates \"YYYY-MM-DD\" format reference_date reference date age calculation, defaults current date","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/calculate_age_years.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate animal age in years from date of birth — calculate_age_years","text":"integer vector representing ages years","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/calculate_age_years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate animal age in years from date of birth — calculate_age_years","text":"","code":"# Single date calculate_age_years(\"2015-01-01\") #> [1] 10 # Vector of dates calculate_age_years(c(\"2010-05-15\", \"2018-10-20\", \"2012-03-03\")) #> [1] 14  6 13 # With custom reference date calculate_age_years(\"2015-01-01\", reference_date = \"2020-01-01\") #> [1] 5"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/convert_to_factors.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","title":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","text":"Convert multiple columns factors + Converts specified columns data frame factor type.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/convert_to_factors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","text":"","code":"convert_to_factors(data, columns)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/convert_to_factors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","text":"data data frame columns character vector column names convert factors","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/convert_to_factors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","text":"data frame specified columns converted factors","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/convert_to_factors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert multiple columns to factors + Converts specified columns in a data frame to factor type. — convert_to_factors","text":"","code":"df <- data.frame(   animal_type = c(\"dog\", \"cat\", \"bird\"),   sex = c(\"M\", \"F\", \"M\"),   adopted = c(\"Yes\", \"No\", \"Yes\") ) convert_to_factors(df, c(\"animal_type\", \"sex\", \"adopted\")) #>   animal_type sex adopted #> 1         dog   M     Yes #> 2         cat   F      No #> 3        bird   M     Yes"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/ensure_dir_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure directory exists — ensure_dir_exists","title":"Ensure directory exists — ensure_dir_exists","text":"Checks directory exists creates ","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/ensure_dir_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure directory exists — ensure_dir_exists","text":"","code":"ensure_dir_exists(dir_path, recursive = TRUE, show_warnings = FALSE)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/ensure_dir_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure directory exists — ensure_dir_exists","text":"dir_path Character string specifying directory path recursive Logical. parent directories created? Default TRUE show_warnings Logical. warnings shown? Default FALSE","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/ensure_dir_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure directory exists — ensure_dir_exists","text":"Nothing, creates directory exist","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/ensure_dir_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure directory exists — ensure_dir_exists","text":"","code":"ensure_dir_exists(\"results/figures\") ensure_dir_exists(\"data/processed\", recursive = TRUE)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/evaluate_rf_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a classification model — evaluate_rf_model","title":"Evaluate a classification model — evaluate_rf_model","text":"function evaluates trained model test data, computing confusion matrix, metrics, summary statistics binary classification.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/evaluate_rf_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a classification model — evaluate_rf_model","text":"","code":"evaluate_rf_model(   model,   test_d,   target_col = \"adopted\",   positive_level = \"Yes\",   negative_level = \"No\" )"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/evaluate_rf_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a classification model — evaluate_rf_model","text":"model Trained model object (e.g., randomForest) test_d data frame containing test data target_col name target column. Default: \"adopted\" positive_level positive class level. Default: \"Yes\" negative_level negative class level. Default: \"\"","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/evaluate_rf_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a classification model — evaluate_rf_model","text":"list containing: confusion_matrix (caret confusionMatrix object), metrics (dataframe performance metrics), cm_summary (confusion matrix summary)","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/evaluate_rf_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a classification model — evaluate_rf_model","text":"","code":"if (FALSE) { # \\dontrun{ # Example dummy data for testing test_data <- data.frame(adopted = factor(c(\"Yes\", \"No\")),                         feature1 = c(1.2, 3.4),                         feature2 = c(\"A\", \"B\")) rf_model <- randomForest::randomForest(adopted ~ ., data = test_data) results <- evaluate_rf_model(rf_model, test_data)  # Access components metrics_df <- results$metrics conf_matrix <- results$confusion_matrix } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/group_rare_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","title":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","text":"Group rare categories column Replaces specified rare categories column custom label (e.g., \"\").","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/group_rare_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","text":"","code":"group_rare_categories(data, column_name, rare_categories, other_name = \"Other\")"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/group_rare_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","text":"data data frame column_name name column process rare_categories vector category names group other_name name assign grouped categories, defaults \"\"","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/group_rare_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","text":"modified data frame specified column modified","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/group_rare_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Group rare categories in a column Replaces specified rare categories in a column with a custom label (e.g., ","text":"","code":"# group_rare_categories(data, \"animal_type\", c(\"reptile\", \"guinea pig\")) if (FALSE) { # \\dontrun{ df <- data.frame(   animal_type = c(\"dog\", \"cat\", \"reptile\", \"guinea pig\", \"dog\"),   stringsAsFactors = FALSE ) # Group rare categories group_rare_categories(df, \"animal_type\", c(\"reptile\", \"guinea pig\")) } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/load_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Load CSV and print dimensions — load_data","title":"Load CSV and print dimensions — load_data","text":"Load CSV print dimensions","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/load_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load CSV and print dimensions — load_data","text":"","code":"load_data(path, verbose = TRUE)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/load_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load CSV and print dimensions — load_data","text":"path string specifying path CSV file verbose logical: show information printed console (Default TRUE)","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/load_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load CSV and print dimensions — load_data","text":"tibble (data.frame) loaded file print dimensions dataset verbose TRUE","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/load_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load CSV and print dimensions — load_data","text":"","code":"if (FALSE) { # \\dontrun{ data <- load_data(\"data/processed/longbeach_transformed.csv\") data <- load_data(\"data/processed/my_data.csv\", verbose = FALSE) } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_adoption_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","title":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","text":"Plot overall adoption distribution Creates bar plot showing distribution adoption outcomes (e.g., Yes/).","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_adoption_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","text":"","code":"plot_adoption_distribution(data)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_adoption_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","text":"data data frame includes column named \"adopted\".","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_adoption_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","text":"ggplot object representing adoption distribution.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_adoption_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot overall adoption distribution Creates a bar plot showing the distribution of adoption outcomes (e.g., Yes/No). — plot_adoption_distribution","text":"","code":"if (FALSE) { # \\dontrun{ df <- data.frame(adopted = factor(c(\"Yes\", \"No\", \"Yes\", \"Yes\", \"No\"))) plot_adoption_distribution(df) } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_age_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","title":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","text":"Plot age distribution histogram Creates histogram showing age varies adoption outcomes.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_age_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","text":"","code":"plot_age_distribution(data, output_path)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_age_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","text":"data data frame \"age\" column \"adopted\" column. output_path File path save resulting histogram","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_age_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","text":"returned value. Saves plot specified file path.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_age_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot age distribution histogram Creates a histogram showing how age varies with adoption outcomes. — plot_age_distribution","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample data sample_data <- data.frame(   age = c(1, 3, 5, 2, 4),   adopted = factor(c(\"Yes\", \"No\", \"Yes\", \"No\", \"Yes\")) ) plot_age_distribution(sample_data, \"results/figures/age_distribution.png\") } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_confusion_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","title":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","text":"Plot confusion matrix heatmap Creates heatmap visualization confusion matrix. Optionally saves plot file.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_confusion_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","text":"","code":"plot_confusion_matrix(   cm,   path_saved = NULL,   color_low = \"#f1f1f1\",   color_high = \"#1f77b4\",   text_color = \"white\",   text_size = 8,   title = \"Confusion Matrix Heatmap\",   width = NULL,   height = NULL )"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_confusion_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","text":"cm caret confusionMatrix object path_saved File path save plot. NULL, plot returned saved. color_low Color low values gradient. Default: \"#f1f1f1\" (light gray) color_high Color high values gradient. Default: \"#1f77b4\" (blue) text_color Color text labels. Default: \"white\" text_size Size text labels. Default: 8 title Plot title. Default: \"Confusion Matrix Heatmap\" width Plot width inches saving. Default: 8 height Plot height inches saving. Default: 7","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_confusion_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","text":"Invisibly returns ggplot object.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_confusion_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot confusion matrix as a heatmap Creates a heatmap visualization of a confusion matrix. Optionally saves the plot to a file. — plot_confusion_matrix","text":"","code":"if (FALSE) { # \\dontrun{ # Create dummy confusion matrix library(caret) actual <- factor(c(\"Yes\", \"No\", \"Yes\", \"No\", \"Yes\")) predicted <- factor(c(\"Yes\", \"Yes\", \"No\", \"No\", \"Yes\")) cm <- caret::confusionMatrix(predicted, actual)  # Plot it plot_confusion_matrix(cm) } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_feature_importance.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","title":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","text":"Plot feature importance random forest model Plots variable importance scores trained Random Forest model. Optionally saves plot file.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_feature_importance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","text":"","code":"plot_feature_importance(   model,   path_saved = NULL,   fill_color = \"steelblue\",   importance_type = 1,   title = \"Feature Importance\",   width = NULL,   height = NULL )"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_feature_importance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","text":"model Trained random forest model path_saved File path save plot. NULL, plot returned saved. fill_color Color bars. Default: \"steelblue\" importance_type Type importance plot. Either \"MeanDecreaseAccuracy\" (1) \"MeanDecreaseGini\" (2). Default: 1 title Plot title. Default: \"Feature Importance\" width Plot width inches saving. Default: 10 height Plot height inches saving. Default: 8","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_feature_importance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","text":"Invisibly returns ggplot object.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_feature_importance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot feature importance from a random forest model Plots variable importance scores from a trained Random Forest model. Optionally saves the plot to a file. — plot_feature_importance","text":"","code":"if (FALSE) { # \\dontrun{ # Example random forest model for feature importance library(randomForest) df <- data.frame(   adopted = factor(c(\"Yes\", \"No\", \"Yes\", \"Yes\", \"No\")),   feature1 = c(2.3, 1.1, 3.4, 2.1, 0.9),   feature2 = c(\"A\", \"B\", \"A\", \"B\", \"A\") ) model <- randomForest(adopted ~ ., data = df)  # Plot feature importance plot_feature_importance(model) } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_grouped_adoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","title":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","text":"Plot adoption distribution group Generates grouped bar chart showing adoption counts specified grouping variable.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_grouped_adoption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","text":"","code":"plot_grouped_adoption(data, group_col, title, xlab, output_path)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_grouped_adoption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","text":"data data frame. group_col string specifying column group (e.g., animal_type). title string plot title. xlab string x-axis label. output_path File path save resulting plot PNG.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_grouped_adoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","text":"return value. Saves plot specified file path.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/plot_grouped_adoption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot adoption distribution by group Generates a grouped bar chart showing adoption counts by a specified grouping variable. — plot_grouped_adoption","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample data sample_data <- data.frame(   animal_type = c(\"dog\", \"cat\", \"dog\", \"cat\", \"bird\"),   adopted = factor(c(\"Yes\", \"No\", \"Yes\", \"No\", \"Yes\")) ) plot_grouped_adoption(sample_data,                       \"animal_type\",                       \"Adoption by Animal Type\",                       \"Animal Type\",                       \"results/figures/adoption_by_type.png\") } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/save_count_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","title":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","text":"Save count table column Counts occurrences unique values column saves result CSV file.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/save_count_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","text":"","code":"save_count_table(data, col_name, output_path)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/save_count_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","text":"data data frame col_name Column count output_path File path save CSV","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/save_count_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","text":"return value. Writes CSV file specified path.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/save_count_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save count table of a column Counts the occurrences of unique values in a column and saves the result as a CSV file. — save_count_table","text":"","code":"if (FALSE) { # \\dontrun{ # Example data df <- data.frame(   animal_type = c(\"Dog\", \"Cat\", \"Dog\", \"Rabbit\", \"Dog\", \"Cat\") )  # Save count table to CSV save_count_table(df, \"animal_type\", \"results/tables/animal_counts.csv\") } # }"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/train_rf_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Train a Random Forest model — train_rf_model","title":"Train a Random Forest model — train_rf_model","text":"Trains Random Forest model using provided formula data. Handles standard dot notation formula. Checks missing variables ensures reproducibility via seed.","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/train_rf_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train a Random Forest model — train_rf_model","text":"","code":"train_rf_model(d, formula, ntree = 100, mtry = 2, seed = 123)"},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/train_rf_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train a Random Forest model — train_rf_model","text":"d data frame containing training data formula Model formula use training (required) ntree Number trees grow. Default: 100 mtry Number variables randomly sampled split. Default: 2 seed Random seed reproducibility. Default: 123","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/train_rf_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train a Random Forest model — train_rf_model","text":"trained randomForest model object","code":""},{"path":"https://dsci-310-2025.github.io/animalAdoptR/reference/train_rf_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Train a Random Forest model — train_rf_model","text":"","code":"if (FALSE) { # \\dontrun{ # Example data df <- data.frame(   adopted = factor(c(\"Yes\", \"No\", \"Yes\", \"No\")),   age = c(2, 5, 1, 4),   sex = factor(c(\"M\", \"F\", \"F\", \"M\")) )  # Train model model <- train_rf_model(df, adopted ~ age + sex) } # }"}]
